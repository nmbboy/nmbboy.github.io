<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>test</title>
    <url>/2021/08/18/test/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>this is a test blog.</p>
]]></content>
      <categories>
        <category>-[test]</category>
      </categories>
      <tags>
        <tag>-[test]</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建hexo的过程</title>
    <url>/2021/08/19/%E6%90%AD%E5%BB%BAhexo%E7%9A%84%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>其实这次博客的搭建也是一次偶然，也想了想还是应该对自己的一些事情记录一下。</p>
<span id="more"></span>
<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a><strong>环境搭建</strong></h1><p><em>博客目前托管在github上的，后期我想让他运行在自己的服务器上，让github作为一个备份。</em></p>
<p>由于hexo是由Node.js写的，主要是需要以下的环境</p>
<ul>
<li><p>一台liunx 服务器（可以为本地）</p>
</li>
<li><p>git</p>
</li>
<li><p>Node.js</p>
</li>
</ul>
<hr>
<p>1.<strong>安装git</strong></p>
<blockquote>
<p>apt install date</p>
<p>apt-get install git</p>
</blockquote>
<p>2.<strong>安装Node.js和npm</strong></p>
<blockquote>
<p>apt-get install nodejs</p>
<p>apt-get install npm</p>
</blockquote>
<p>3.<strong>验证环境</strong></p>
<blockquote>
<p>nodejs –version</p>
<p>npm -v </p>
<p>git -v </p>
</blockquote>
<p>4.<strong>Hexo的安装</strong></p>
<p><em>这里我选择的是全局安装</em></p>
<blockquote>
<p>npm install -g hexo-cli</p>
<p>hexo init hexo</p>
</blockquote>
<p>到这里呢，hexo的安装就完成了</p>
<blockquote>
<p>可以使用</p>
</blockquote>
<blockquote>
<p>hexo s</p>
</blockquote>
<p>访问 <a href="http://0.0.0.0:4000/">http://0.0.0.0:4000</a> 可以验证一下。</p>
<hr>
<h1 id="Github环境配置"><a href="#Github环境配置" class="headerlink" title="Github环境配置"></a><strong>Github环境配置</strong></h1><p>1.首先让git全局记住我的github账号。</p>
<blockquote>
<p>git config –global user.name “Name”</p>
</blockquote>
<blockquote>
<p>git config –global user.email “Email”</p>
</blockquote>
<p>2.生成SSH密钥</p>
<blockquote>
<p>ssh-keygen -t rsa -C <a href="mailto:&#x78;&#120;&#x78;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#x6d;">&#x78;&#120;&#x78;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#x6d;</a></p>
</blockquote>
<p>查看一下是否生成</p>
<blockquote>
<p>cat .ssh/id_rsa.pub</p>
</blockquote>
<p><a href="https://imgtu.com/i/fbk3EF"><img src="https://z3.ax1x.com/2021/08/19/fbk3EF.png" alt="fbk3EF.png"></a></p>
<p>3.配置github</p>
<p>上github，创建项目</p>
<p><a href="https://imgtu.com/i/fbA8qf"><img src="https://z3.ax1x.com/2021/08/19/fbA8qf.png" alt="fbA8qf.png"></a></p>
<p>将我刚刚生成的ssh-key加入到github上，这样就可以让他们两个愉快的玩耍了。</p>
<p><a href="https://imgtu.com/i/fbAzOP"><img src="https://z3.ax1x.com/2021/08/19/fbAzOP.png" alt="fbAzOP.png"></a></p>
<p>验证一下咱们的ssh是否成功的添加到了github上</p>
<blockquote>
<p>ssh -T <a href="mailto:&#x67;&#105;&#x74;&#64;&#103;&#105;&#116;&#104;&#x75;&#x62;&#46;&#99;&#110;">&#x67;&#105;&#x74;&#64;&#103;&#105;&#116;&#104;&#x75;&#x62;&#46;&#99;&#110;</a></p>
</blockquote>
<p><a href="https://imgtu.com/i/fbekfe"><img src="https://z3.ax1x.com/2021/08/19/fbekfe.png" alt="fbekfe.png"></a></p>
<p>4.配置Hexo _config.yml</p>
<blockquote>
<p>deploy:</p>
<p>type: git</p>
<p>repo: <a href="mailto:&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#104;&#117;&#98;&#46;&#99;&#111;&#x6d;">&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#104;&#117;&#98;&#46;&#99;&#111;&#x6d;</a>:username/username.github.io.git</p>
<p>branch: master</p>
</blockquote>
<p>5.部署到github</p>
<p>完成上面的操作后本地就与github连接上了，咱们开始上传部署代码。</p>
<blockquote>
<p>hexo g </p>
</blockquote>
<blockquote>
<p>hexo d</p>
</blockquote>
<hr>
<p><a href="https://imgtu.com/i/fbmFH0"><img src="https://z3.ax1x.com/2021/08/19/fbmFH0.png" alt="fbmFH0.png"></a></p>
<p>如果需要修改域名访问的话就需要购买域名，并且需要解析一下。</p>
<p><a href="https://imgtu.com/i/fbnTeI"><img src="https://z3.ax1x.com/2021/08/19/fbnTeI.png" alt="fbnTeI.png"></a></p>
<p>还有一步需要配置，修改github 页面的设置。这里我已经修改好了域名。</p>
<p><a href="https://imgtu.com/i/fbmxVx"><img src="https://z3.ax1x.com/2021/08/19/fbmxVx.png" alt="fbmxVx.png"></a></p>
<h2 id="至此就已搭建完成了。"><a href="#至此就已搭建完成了。" class="headerlink" title="至此就已搭建完成了。"></a><strong>至此就已搭建完成了。</strong></h2>]]></content>
      <tags>
        <tag>-其他</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次简单的接口测试</title>
    <url>/2021/08/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="1a12e2c9a76a41413f6bee6f111647ba23c8200c52c1b0a879ea677a68a623cb">6931fd889a88ead00a720661cc158e507639b5dcb86860a96d76efa506a8c5500f08ae26d239ad2583b4dab7d9af47323dd1966b9083b1fb8e490e4fc00e63e01ab4cc14e4e7068db6029947eb4608c5d2c83dbeefc8ed6c02e04004b410d127c524c5225376283ec64d1f68dccf0b8b4d307ad74efe1d466b2cdaa98415182ca59bde5a19228a43f156b816f95fb6ccf0097f0454e47897e47d710c0c0e2bb55eeae598794c46f32f3f024d7032c1a3a60d9313cc809f8c753b245d4c367e44187c6dc2793f8345cc3b71a4a8e7a3857393a754538b081d0e8492ab538c6e987c9a25bf445c53ff9cc474510a9c75af690ff2861507117cd13e1a0bc7a6f6bf7933a9f9459efc2eb0011dc8274569e9a574cd0861c74f7f4ca70e93b6dba56a031b7c90593b51a1c895a67bd07f0cee8056fbd0cd526348d55465b8145bf3d2506480e86cb863e818cbdea68aa9bb07284bcf89d98a2ef7f197593138374ce13d4746de3dca54b91f92681ea7ee52e62b234f2b29b435957ab24e3073e7c539e7aad62e49c53fb294d2384156fd1abb27af0eca9b8a53152bc68891acc931e3d45a499bf9f36c0dbbb6a1a78d49832aac9305556471fe3264ddda715e37d1fd49ec3b9c50b9f47e1d8052701413585adbaef7c8f82c3782412edd7b4e666a94092213857c8594842897f19995921f842f1431683c7881dac6952d23c05c383573f43c360528d7287be9bbaecad9685b0ed53f0ffa88d9ef871be46713250585772defe3e1fa11165365b463a4f993487c65bfe448358b0b6b3085072c747ceedb90624cf5a5c70f916a12f5734ffde354ebda67f97612be13c44e498db2faec11816ae24016ca4610918cdc0e6f7d51b2cacc57b4dd32a19235bdec726ad8a61ac5b3679e6ad9872bb88e9ab6c3ce2d4386ca9af36ec52c883a8fe634efef9baf6f5f80db15d9d038b05b89ee9f10f2d62bd1180a349c0562d20889bad9f879fcbc5068a0cc96107bc6438189e9c7b6bb0b0df4a092c1b2837345616bbd64362afe6b342bf4511f864d756e1ba6e81ae2d9f7cca40c6f1a1c24f4f7a598443f7ba73353ddbe4a2aa8e0c0d3c0d3ef6b0d9f84ed2343ef53453aeedb3639da23764afcb67fecf60c3c7de59ff45f2bff5a91fe6fd6035af6846d30de86b8170100e9026b3bcf5b47f4cf62d4bb2233e8bf22565ad84b123e3805397658d1e01bba1137078816d1dd1526113e715e7bfd3cecb16239e89db9c6f9712b4fdcd785a3aaed7979cdaa78d1e8158e7002953eb699dcf3abacbe487f5937804bdebf09d5cd3873474bb1a9314aebc59cd17a3a75eefca2d03d22d88adf546b31a30bedb6fefa2b3001962fe86bde8ff7e48a4ba5af96ba604b698a4739b1a1dc73a64f0833ea6ddfdcbff993183616440a874d95a66c71d3376b005e142e88a91337d839a54da79003cfe4b3665e5b4c9cc16e8b268c84b917f88c043417c30f4c9d2b888a668470314b978f43c3b9fb0598a560aaa1a8ddd9692666feaa2cc9946fde999d1d76e2b9d44f4c62377223e0ec8b6bddc0a62399f36c6b4888af2b15d3e0e330f54afea23da21111e1308f7e44e754922ad8aa29d8e06ad2b276c40cb3d82359cb165e8304f27c2e7fc43dad4167ded8e35bb9dba44c404b3df035811b081c458e21701d2b36c7501292a1e934d1cde14d4bb38f369c7eee109f32cf1264fa1af73f9a33af83d84e532cf9aaa91e695edbf7a199097b0e5300e35dd354e07427b1d9c9229cb6dc70e4173261690d27092172c09d11c40fa2c619db04d82219a49e7cbf1fa8391ec05d8516763d5e871dde81744b36452f151177d91c262d9f94bf2367dfc85495033cfb44612d38b817f658ae24e04c716915850353afa6caba311538d99247c34434fd51a7a3d2ecacbcaef3eddc06d9afe2a67224ca63c81ab542dc43f75b3f03428c0f015e9594718e46ca3db161e3b257b2d923797651cc353d7aa17c96c5265544cbdb1930cef7822f0dfac511f03847e31dd95f15e85b2494837a784a35326fb732b17e6c4a327fae815bc8e62c2c2f6410c1d00a3d75125396d0146ddd2a592ecb7af03826744489c113c3113cc8341e5b7bfce5259921e1f992c6f9a3b3aa360e14d0139ca0b238c92063880a4174188524004a1adf112235662c1fe45b187facba5b605b701c9355a6055ec879a031d6585bb5e02866df14ae44e08a668c96a87240f21a14aa9efd4f32ace934fdf02db2bdc0bcaa2b590a8f14908d8d71dcc0df07e54fccba996f47bce5964ae57223888b8db2b42e743a21d8d05de511749126136359409c845a8e00655e3a753b951e3d7703714770ecb2bc82350b3e67b1fc710bdaaef1ccdd8776f6ae0f7ba339a81092251be7b7495aad61ea282540b7c34f5ae2e44512a2f6e4b922a64177a02da12f05c92ec6b480c403cbc2b3f038ae3bf84e6fd55542c1a8c93b38c3bc72a5d515e6f8848094a5789a665b47a1d0299466f45066bcdbaa874eb6afd38355bf40b8fae94349001bfe698ff459899398624a95109a27c6f7d3b014f32eca44b3ac5794e3987cedbd187527589614a928a3b9a20851b07f3f88179c2bd6e69ef70db9755dd088f64a32635dbb5f9ae485937edc0a03ddb769f0014dc2e807777bd80c8c50540e9da16f09257949bca694bbe6f36e927e2e5a35d75efe912e2b5c0cb6b7e5a1419b726700ec9350707be49907dab623b1f5af9d35233c42501927cf6ebbf85007c74507d73eba3387d5f9147eda10f5cecae54f179cecc093d52e7d56357a698e1d0419158d7dbccc3423c352d90e7475caec9a04e448f012a9bdba3385b9758c2ffeb21417d650eeb402bd872d1657a0a90ff1f9f89820645ee72443b383f8a625f34cf031b11a5dcf5be3d8bf59720a25851ceba618e5aa5efcc1554b8a526534e1296fa129fd1a7b73caf4fa04290783dfb488f8bd475779d6eb90c2ca922224a1e3290fd30b58375e60717260758240969b58720272024402fdef247b29a39d0c786b4c4eb2e0589b59011f7f62008fec83aca41760ea3dbdc5296b545bac987632e97e8ae810c20ad69349383db00ef6c6a86bcbee9586708456fd518615a9e574279e7e2be0d5a31f6ad08a44892e004e26b677a65902827021139d42fb87cb83029349f2e4758b680ec64e9bda721e81753019e3c8107504cb86de70413a4938bc420fb53debef8b286f63088f56aa8204db17b1de0b9b5654beffe935fcb57320cccba4b01f2d9c53ad61f3f8d3f126d5da98d319b223035365f5662d19cda1bab3304102f5fef5c251bdb78fd67679162310c9b857ccef4b7747bc36216eb1f8b80d7a6fc650ce9a13902580db6bb73a97670d66b0ad91b41d487fc193319a5ef9482f6a677645862c5e3ceea3d8698c44c3d5d1f2d831e38d89a3075bad56d06daffa1e6ee2fa37f6a36baf9f71a014c0be277f4d0abee9612c579f80bc6d864526e8bc2848ffeefc83cffaf22c6a7974771430d8c7896520a81558437d77cea61cefa5de280d7870c8dd2a7078df60f16b06ecbeb6f3c791e47c3c469bd35679e579dcbf73acaba6be5e63bcf03d8d692d7e074e3983957689c8aca5ae5227502bfd443770e85b3d16b086031bdc35c833d4e9aa0f51ea95e67b2fc7478eabb4ac502421461879ab651906bdc538ec6f7ff6bb4bc45cd4ec648716df8787a9ea59eaf470e76fec6d6e7237ab7d96af8470698b465597dd706c93c20c1958f2e592442be773dadf8ba5ef562f067bee6cd6c1d4ae04c04cff67c71da82cf7f6ec811bdeef4a0057d4f4c501719e57b153ed71a6bbef1cbcea1f65946c2c80ab0ed55a6f05a1710b</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">小坏蛋哦！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>安全</tag>
      </tags>
  </entry>
  <entry>
    <title>php代码审计学习-发卡cms（一）</title>
    <url>/2021/08/24/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0-%E5%8F%91%E5%8D%A1cms%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>公司的项目告一段落，还是多多学习吧，要不然怎么知道自己到底技术有多菜呢？（咳咳）。记录一下学习php审计的过程。</p>
<h1 id="需要工具"><a href="#需要工具" class="headerlink" title="需要工具"></a>需要工具</h1><p>VsCode</p>
<p>Seay源代码审计系统</p>
<span id="more"></span>
<h1 id="前台审计"><a href="#前台审计" class="headerlink" title="前台审计"></a>前台审计</h1><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>首先把整个cms源码放进Seay审计系统中，进行自动审计。</p>
<p>可以看到很多的漏洞，我们先看这个ajax.php<br><a href="https://imgtu.com/i/hkeHqs"><img src="https://z3.ax1x.com/2021/08/24/hkeHqs.png" alt="hkeHqs.png"></a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;act&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;非法访问！&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$act</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;act&#x27;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到它需要检测一下“act”的存在，如若不存在将不会往下执行。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (<span class="variable">$act</span>)&#123;</span><br><span class="line">    <span class="comment">//异步获取商品</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;selgo&#x27;</span>: </span><br><span class="line">       <span class="variable">$select</span> = <span class="string">&quot;&lt;option&gt;请选择商品&lt;/option&gt;&quot;</span>;</span><br><span class="line">        <span class="variable">$tpID</span> = _if(<span class="variable">$_POST</span>[<span class="string">&#x27;tyid&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$tpID</span> == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&#x27;&#123;&quot;code&quot;:0,&quot;msg&quot;:&quot;&#x27;</span>.<span class="variable">$select</span>.<span class="string">&#x27;&quot;&#125;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from if_goods where  state =1 and tpId = &quot;</span>.<span class="variable">$tpID</span>.<span class="string">&quot; ORDER BY sotr desc&quot;</span>;</span><br><span class="line">        <span class="variable">$res</span> = <span class="variable">$DB</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">       <span class="variable">$i</span>=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="variable">$row</span> =<span class="variable">$DB</span>-&gt;fetch(<span class="variable">$res</span>))&#123;</span><br><span class="line">            <span class="variable">$c</span> = <span class="variable">$DB</span>-&gt;count(<span class="string">&quot;SELECT COUNT(id) from if_km  where stat = 0 and gid =&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">          <span class="variable">$select</span>.=<span class="string">&quot;&lt;option id=&#x27;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&quot;&#x27; imgs=&#x27;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;imgs&#x27;</span>].<span class="string">&quot;&#x27; value=&#x27;&quot;</span>._if2(<span class="variable">$row</span>[<span class="string">&#x27;gName&#x27;</span>]).<span class="string">&quot;&#x27;kc=&#x27;&quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;&#x27;  title=&#x27;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;price&#x27;</span>].<span class="string">&quot;&#x27; alt = &#x27;&quot;</span>._if2(<span class="variable">$row</span>[<span class="string">&#x27;gInfo&#x27;</span>]).<span class="string">&quot;&#x27;&gt;&quot;</span>._if2(<span class="variable">$row</span>[<span class="string">&#x27;gName&#x27;</span>]).<span class="string">&quot;&lt;/option&gt;&quot;</span>;</span><br><span class="line">         </span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">exit</span>(<span class="string">&#x27;&#123;&quot;code&quot;:0,&quot;msg&quot;:&quot;&#x27;</span>.<span class="variable">$select</span>.<span class="string">&#x27;&quot;&#125;&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>; </span><br></pre></td></tr></table></figure>
<p>先看一下这个循环，判断了act的传参是否存在selgo</p>
<p>存在的话久会接收tyid 的传参，可以看到在就收传参后会经过一个_if() 函数，跟踪一下这个函数。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_if</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$str</span> = str_replace(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$str</span> = str_replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$str</span> = str_replace(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$str</span> = str_replace(<span class="string">&quot;:&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$str</span> = str_replace(<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$str</span> = str_replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$str</span> = str_replace(<span class="string">&quot;=&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$str</span> = str_replace(<span class="string">&quot;||&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$str</span> = str_replace(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$str</span> = str_replace(<span class="string">&quot;#&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$str</span> = str_replace(<span class="string">&quot;*&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$str</span> = str_replace(<span class="string">&quot;?&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$str</span>;</span><br></pre></td></tr></table></figure>

<p>明显的看的到是一个过滤的安全函数，不过还好，至过滤了特殊符号，那么是否可以使用盲注呢，我们用sleep函数测试一下。<br><a href="https://imgtu.com/i/hkGlj0"><img src="https://z3.ax1x.com/2021/08/24/hkGlj0.png" alt="hkGlj0.png"></a><br>通过使用bp抓包测试sleep函数是生效了的。</p>
<p>ok一处SQL注入</p>
<hr>
<p>我们继续往下看一个循环</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">&#x27;create&#x27;</span>:</span><br><span class="line">         <span class="variable">$out_trade_no</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;out_trade_no&#x27;</span>];</span><br><span class="line">         <span class="variable">$gid</span> = _if(<span class="variable">$_POST</span>[<span class="string">&#x27;gid&#x27;</span>]);</span><br><span class="line">         <span class="variable">$money</span> = _if(<span class="variable">$_POST</span>[<span class="string">&#x27;money&#x27;</span>]);</span><br><span class="line">         <span class="variable">$rel</span> = _if(<span class="variable">$_POST</span>[<span class="string">&#x27;rel&#x27;</span>]);</span><br><span class="line">         <span class="variable">$type</span> = _if(<span class="variable">$_POST</span>[<span class="string">&#x27;type&#x27;</span>]);</span><br><span class="line">         <span class="variable">$number</span> = intval(<span class="variable">$_POST</span>[<span class="string">&#x27;number&#x27;</span>]);</span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$number</span> &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">             <span class="keyword">exit</span>(<span class="string">&#x27;&#123;&quot;code&quot;:-1,&quot;msg&quot;:&quot;no&quot;&#125;&#x27;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         </span><br><span class="line">         <span class="variable">$checkcqq_row</span> = <span class="variable">$DB</span>-&gt;get_row(<span class="string">&quot;select * from  if_blacklist where data = &#x27;<span class="subst">$rel</span>&#x27; and type = 1&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$checkcqq_row</span>)&#123;</span><br><span class="line">             <span class="keyword">exit</span>(<span class="string">&#x27;&#123;&quot;code&quot;:-1,&quot;msg&quot;:&quot;当前QQ已被列入本站黑名单&quot;&#125;&#x27;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="variable">$sql</span> = <span class="string">&quot;insert into if_order(out_trade_no,gid,money,rel,benTime,type,number) </span></span><br><span class="line"><span class="string">         values(&#x27;<span class="subst">&#123;$out_trade_no&#125;</span>&#x27;,<span class="subst">&#123;$gid&#125;</span>,<span class="subst">&#123;$money&#125;</span>,&#x27;<span class="subst">&#123;$rel&#125;</span>&#x27;,now(),&#x27;<span class="subst">&#123;$type&#125;</span>&#x27;,<span class="subst">&#123;$number&#125;</span>)&quot;</span>;</span><br><span class="line">         <span class="variable">$b</span> = <span class="variable">$DB</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$b</span> &gt; <span class="number">0</span>)&#123;</span><br><span class="line">             wsyslog(<span class="string">&quot;创建订单成功!&quot;</span>,<span class="string">&quot;IP:&quot;</span>.real_ip().<span class="string">&quot;,城市:&quot;</span>.get_ip_city());</span><br><span class="line">             <span class="keyword">exit</span>(<span class="string">&#x27;&#123;&quot;code&quot;:0,&quot;msg&quot;:&quot;ok&quot;&#125;&#x27;</span>);</span><br><span class="line">         &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             <span class="keyword">exit</span>(<span class="string">&#x27;&#123;&quot;code&quot;:-1,&quot;msg&quot;:&quot;数据库出错了~~~&quot;&#125;&#x27;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         ;</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure>
<p>从act接收的传参可以看到是一个创建订单的地方哈</p>
<p>在下面可以看到，应该是开发漏掉了，没有经过安全函数的处理，所以这里应该是存在sql注入。咱们测试一下。</p>
<p><code>$out_trade_no = $_POST[&#39;out_trade_no&#39;];</code><br><a href="https://imgtu.com/i/hkaX24"><img src="https://z3.ax1x.com/2021/08/24/hkaX24.png" alt="hkaX24.png"></a></p>
<p>加了一个’ 他就已经报错了，说明单引号被带入到sql语句当中了，sql注入再加一处</p>
<p>到这里呢这个文件基本的问题都差不多了，还有其他几个循环，问题都是安全函数过滤不严格导致注入。问题不大哈。</p>
<hr>
<p>接下来去看一下其他的文件<br><code>other/submit.php</code><br>先看一下代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$type</span>==<span class="string">&#x27;alipay&#x27;</span> || <span class="variable">$type</span>==<span class="string">&#x27;tenpay&#x27;</span> || <span class="variable">$type</span>==<span class="string">&#x27;qqpay&#x27;</span> || <span class="variable">$type</span>==<span class="string">&#x27;wxpay&#x27;</span>)&#123;</span><br><span class="line">	<span class="keyword">require_once</span>(SYSTEM_ROOT_E.<span class="string">&quot;epay/epay.config.php&quot;</span>);</span><br><span class="line">	<span class="keyword">require_once</span>(SYSTEM_ROOT_E.<span class="string">&quot;epay/epay_submit.class.php&quot;</span>);</span><br><span class="line">	<span class="keyword">empty</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;auth&#x27;</span>])?<span class="keyword">exit</span>():<span class="literal">null</span>;</span><br><span class="line">	<span class="variable">$or</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;out_trade_no&#x27;</span>];</span><br><span class="line">	<span class="comment">//防止修改价格</span></span><br><span class="line">	<span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM if_order WHERE out_trade_no=&#x27;<span class="subst">&#123;$or&#125;</span>&#x27; limit 1&quot;</span>;</span><br><span class="line">	<span class="variable">$row</span> = <span class="variable">$DB</span>-&gt;get_row(<span class="variable">$sql</span>);</span><br><span class="line">	<span class="keyword">if</span>(!row || <span class="variable">$row</span>[<span class="string">&#x27;money&#x27;</span>] != <span class="variable">$_GET</span>[<span class="string">&#x27;money&#x27;</span>])&#123;</span><br><span class="line">	    <span class="keyword">exit</span>(<span class="string">&quot;验证失败1&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$number</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;number&#x27;</span>];</span><br><span class="line">	<span class="variable">$sql</span> = <span class="string">&quot;select * from  if_goods where id = &quot;</span>. <span class="variable">$_GET</span>[<span class="string">&#x27;gid&#x27;</span>];</span><br><span class="line">	<span class="variable">$row</span> = <span class="variable">$DB</span>-&gt;get_row(<span class="variable">$sql</span>);</span><br><span class="line">	<span class="keyword">if</span>(!row || (<span class="variable">$row</span>[<span class="string">&#x27;price&#x27;</span>]*<span class="variable">$number</span>) != <span class="variable">$_GET</span>[<span class="string">&#x27;money&#x27;</span>])&#123;</span><br><span class="line">	    <span class="keyword">exit</span>(<span class="string">&quot;验证失败2&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$parameter</span> = <span class="keyword">array</span>(</span><br><span class="line">		<span class="string">&quot;pid&quot;</span> =&gt; <span class="variable">$conf</span>[<span class="string">&#x27;epay_id&#x27;</span>],<span class="comment">//商户ID</span></span><br><span class="line">		<span class="string">&quot;type&quot;</span> =&gt; <span class="variable">$_GET</span>[<span class="string">&#x27;type&#x27;</span>],<span class="comment">//支付类型</span></span><br><span class="line">		<span class="string">&quot;notify_url&quot;</span>	=&gt;<span class="string">&quot;http://&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="string">&#x27;/other/epay_notify.php&#x27;</span>,<span class="comment">//异步通知</span></span><br><span class="line">		<span class="string">&quot;return_url&quot;</span>	=&gt; <span class="string">&quot;http://&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="string">&#x27;/other/epay_return.php&#x27;</span>,<span class="comment">//回调</span></span><br><span class="line">		<span class="string">&quot;out_trade_no&quot;</span>	=&gt; <span class="variable">$_GET</span>[<span class="string">&#x27;out_trade_no&#x27;</span>],<span class="comment">//订单编号</span></span><br><span class="line">		<span class="string">&quot;name&quot;</span>	=&gt; <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>],<span class="comment">//商品名称</span></span><br><span class="line">		<span class="string">&quot;money&quot;</span>	=&gt; <span class="variable">$_GET</span>[<span class="string">&#x27;money&#x27;</span>],<span class="comment">//金额</span></span><br><span class="line">		<span class="string">&quot;sitename&quot;</span>	=&gt; <span class="variable">$conf</span>[<span class="string">&#x27;title&#x27;</span>]<span class="comment">//网站名称</span></span><br><span class="line">	);</span><br></pre></td></tr></table></figure>
<p>大致的解读一下，首先是对$type进行判断，有其中一个就ok，再就是就收 out_trade_no money number 接收其中的传参，并带入到sql中，再这整个代码中没有见到任何对接收传参危险字符进行处理的行为。可以说是存在SQL注入的。<br><a href="https://imgtu.com/i/hk6cad"><img src="https://z3.ax1x.com/2021/08/24/hk6cad.png" alt="hk6cad.png"></a><br><a href="https://imgtu.com/i/hk66VH"><img src="https://z3.ax1x.com/2021/08/24/hk66VH.png" alt="hk66VH.png"></a></p>
<p>这里是可以直接sqlmap一把梭的。</p>
<hr>
<h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><p>在分析的时候漏了一下index，我们来看看这个index存在的问题。</p>
<p>先来看一下代码。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;tp&#x27;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$tp</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;tp&#x27;</span>];</span><br><span class="line">    <span class="variable">$action</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&#x27;template/&#x27;</span>.<span class="variable">$tp</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$action</span>.<span class="string">&quot;.php&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$conf</span>[<span class="string">&#x27;view&#x27;</span>]) &amp;&amp; <span class="variable">$conf</span>[<span class="string">&#x27;view&#x27;</span>] != <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">    <span class="variable">$t</span> = <span class="variable">$conf</span>[<span class="string">&#x27;view&#x27;</span>];</span><br><span class="line"> </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$t</span> = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;template/&#x27;</span>.<span class="variable">$t</span>.<span class="string">&#x27;/index.php&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>这里其实一眼就可以看的出哈，这串代码是没有对tp、action，进行处理的，是直接拼接在include函数当中。所以这里就造成了文件包含。<br><a href="https://imgtu.com/i/hA6rnS"><img src="https://z3.ax1x.com/2021/08/24/hA6rnS.png" alt="hA6rnS.png"></a></p>
<p>这里如果php版本低一点的话，是可以使用00截断等手法的。</p>
<hr>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>愉快的一天结束了，有空再继续看看前台和后台。代码很菜，更别说审计了，本文一些注入点没有深入验证，但测试后实际是存在的，没有在文中体现，最后文中有错误的地方敬请指正。</p>
]]></content>
      <tags>
        <tag>安全</tag>
        <tag>php审计</tag>
      </tags>
  </entry>
  <entry>
    <title>一次玄幻测试</title>
    <url>/2021/12/01/%E4%B8%80%E6%AC%A1%E7%8E%84%E5%B9%BB%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote>
<p>记录找一下一次对某医院授权的玄幻测试（手动狗头）</p>
</blockquote>
<hr>
<span id="more"></span>
<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><hr>
<blockquote>
<p>由于本次授权是对整片区域的测试授权，<br>所以对信息收集的范围比较广，本次收集到了是一家医院的资产。   </p>
</blockquote>
<hr>
<h3 id="开始测试"><a href="#开始测试" class="headerlink" title="开始测试"></a>开始测试</h3><blockquote>
<p>好，上系统。   </p>
<p><a href="https://imgtu.com/i/o82kOe"><img src="https://z3.ax1x.com/2021/12/01/o82kOe.png" alt="o82kOe.png"></a><br>还是熟悉的味道。<br>这个系统没啥说的 就爆破用户然后猜测口令就完事了。  然后就进去了，要是有他的getshell漏洞就好了，可是我没有，我好菜。<br>这里主要还是讲的同ip下的另外一个系统  </p>
<p><a href="https://imgtu.com/i/o8206U"><img src="https://z3.ax1x.com/2021/12/01/o8206U.png" alt="o8206U.png"></a></p>
<p>系统有几个子系统的入口，随机点了一个入口，管理界面一闪而过。<br>想了想，还是用bp拦住，看看管理界面长什么样，满足一下自己好奇心。<br><a href="https://imgtu.com/i/o8fjc6"><img src="https://z3.ax1x.com/2021/12/01/o8fjc6.png" alt="o8fjc6.png"></a><br>看着功能点挺少的。看着右上角那个图形还是挺像用户的管理什么的就点了点。发现挺有趣的，出来一个修改密码的功能。ok，点点，抓抓包。<br><a href="https://imgtu.com/i/o84FZF"><img src="https://z3.ax1x.com/2021/12/01/o84FZF.png" alt="o84FZF.png"></a><br>这里我修改密码为123456<br>然后重放了一下，发现这个接口是可以直接用的，<br>然后就是对用户名一顿爆破。<br>最后还是整了两个用户，成功登录进入系统，泄露患者数据较多，后台截图就不放了。</p>
</blockquote>
<h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><blockquote>
<p>通过这个低端手法，运气加成的测试，还算顺利。</p>
</blockquote>
]]></content>
      <tags>
        <tag>安全</tag>
      </tags>
  </entry>
  <entry>
    <title>php代码审计学习一</title>
    <url>/2022/03/31/php_in_array/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote>
<p>有一段时间没有写了哈哈，今天更新一下。<br>最近还是在学习公司没有啥项目还是把代码审计学学。</p>
</blockquote>
<hr>
<span id="more"></span>
<h1 id="in-array"><a href="#in-array" class="headerlink" title="in_array()"></a>in_array()</h1><h2 id="函数的使用语法"><a href="#函数的使用语法" class="headerlink" title="函数的使用语法"></a>函数的使用语法</h2><p><a href="https://imgtu.com/i/bNDmZt"><img src="https://s4.ax1x.com/2022/03/04/bNDmZt.png" alt="bNDmZt.png"></a></p>
<blockquote>
<p>在这个函数当中存在三个参数，其中第三个不是必须的。由于函数中存在可选type，加之php为弱语言，<br>该参数位置默认为false，即search中存在array中但是不考虑数据类型在其中也可返回true，也就导致了绕过了这个函数。可能存在过滤sqli当中</p>
</blockquote>
<h2 id="实战ctf题"><a href="#实战ctf题" class="headerlink" title="实战ctf题"></a>实战ctf题</h2><figure class="highlight php"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"> <span class="comment">//index.php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line"><span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;连接失败: &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT COUNT(*) FROM users&quot;</span>;</span><br><span class="line"><span class="variable">$whitelist</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>-&gt;num_rows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="variable">$row</span> = <span class="variable">$result</span>-&gt;fetch_assoc();</span><br><span class="line">    <span class="variable">$whitelist</span> = range(<span class="number">1</span>, <span class="variable">$row</span>[<span class="string">&#x27;COUNT(*)&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span> = stop_hack(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!in_array(<span class="variable">$id</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;id <span class="subst">$id</span> is not in whitelist.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>-&gt;num_rows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="variable">$row</span> = <span class="variable">$result</span>-&gt;fetch_assoc();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&lt;table border=&#x27;1&#x27;&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$row</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&lt;center&gt;<span class="subst">$key</span>&lt;/center&gt;&lt;/td&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;td&gt;&lt;center&gt;<span class="subst">$value</span>&lt;/center&gt;&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/table&gt;&lt;/center&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$conn</span>-&gt;error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="comment">//config.php</span></span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;day1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stop_hack</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">	<span class="variable">$pattern</span> = <span class="string">&quot;insert|delete|or|concat|concat_ws|group_concat|join|floor|\/\*|\*|\.\.\/|\.\/|union|into|load_file|outfile|dumpfile|sub|hex|file_put_contents|fwrite|curl|system|eval&quot;</span>;</span><br><span class="line">	<span class="variable">$back_list</span> = explode(<span class="string">&quot;|&quot;</span>,<span class="variable">$pattern</span>);</span><br><span class="line">	<span class="keyword">foreach</span>(<span class="variable">$back_list</span> <span class="keyword">as</span> <span class="variable">$hack</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(preg_match(<span class="string">&quot;/<span class="subst">$hack</span>/i&quot;</span>, <span class="variable">$value</span>))</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&quot;<span class="subst">$hack</span> detected!&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><blockquote>
<p>在index.php中10-15行中会将$sql在users查询到的行数给到$result并遍历一下把结果给$$whitelist,<br>往后看17-18行可见传入参数$id但传入sql语句中可见到会使用stop_hack()函数中，在config.php中发现是过滤函数，再往后看in_array()函数，要传入的$id号中的东西要在$whitelist中。<br>但是in_array()他没有写type参数，所以只要里面有1-5数字就行，然后就是stop_hack()函数这里把函数过滤了一部份，按照作者写题的意思是叫我们不能使用拼接函数的 updatexml 注入，这里可以使用make_set()函数拼接配合使用。</p>
</blockquote>
<h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p><code> http://127.0.0.1/123.php?id=1 and (select updatexml(1,make_set(3,1,(select flag from flag)),1))</code><br><a href="https://imgtu.com/i/bNh981"><img src="https://s4.ax1x.com/2022/03/04/bNh981.png" alt="bNh981.png"></a></p>
<blockquote>
<p>空格需要编码。<br>该ctf题目为红日安全的，感谢红日安全的开源分享。<br><a href="https://github.com/hongriSec/PHP-Audit-Labs">https://github.com/hongriSec/PHP-Audit-Labs</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>php审计</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2022/03/31/filter_var%E4%BA%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>title: php代码审计学习二</p>
<h1 id="filter-var"><a href="#filter-var" class="headerlink" title="filter_var"></a>filter_var</h1><h2 id="函数使用语法"><a href="#函数使用语法" class="headerlink" title="函数使用语法"></a>函数使用语法</h2><p><a href="https://imgtu.com/i/bUEfqx"><img src="https://s4.ax1x.com/2022/03/04/bUEfqx.png" alt="bUEfqx.png"></a><br>filter的过滤器大致有一下几个</p>
<p><a href="https://imgtu.com/i/bUVuYF"><img src="https://s4.ax1x.com/2022/03/04/bUVuYF.png" alt="bUVuYF.png"></a></p>
<h2 id="函数绕过举例"><a href="#函数绕过举例" class="headerlink" title="函数绕过举例"></a>函数绕过举例</h2><figure class="highlight php"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$url</span> = filter_var(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>], FILTER_VALIDATE_URL);</span><br><span class="line">	var_dump(<span class="variable">$url</span>);</span><br><span class="line">	<span class="variable">$url</span> = htmlspecialchars(<span class="variable">$url</span>);</span><br><span class="line">	var_dump(<span class="variable">$url</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;<span class="subst">$url</span>&#x27;&gt; Next Slide &lt;/a&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p> 这里使用了使用了FILTER_VALIDATE_URL这个过滤器，对GET来的url传参进行了过滤然后使用htmlspecialchars()函数将将特殊字符转换为html实体。<br> 通过网上的一些师傅说的 用JavaScript伪协议来绕过。<br> payload：<br> ?url=javascript://comment/％250aalert(1)<br> 这里尝试了网上的师傅的payload都没有成功，发现如若没有在comment后加上“;”、“/”、“?”、“:”、“@”、“=”和“&amp;” 这个的话FILTER_VALIDATE_URL这个好像会识别为不符合的url，加上后就识别上了。<br> %25是%加上后买你的0a解码后就是%0a为换行，在前面的//为单行注释，后面进行了换行，就不会注释了即绕过了过滤，也执行了。</p>
<h2 id="实战ctf题"><a href="#实战ctf题" class="headerlink" title="实战ctf题"></a>实战ctf题</h2><figure class="highlight php"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">// index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$url</span>) &amp;&amp; filter_var(<span class="variable">$url</span>, FILTER_VALIDATE_URL))&#123;</span><br><span class="line">    <span class="variable">$site_info</span> = parse_url(<span class="variable">$url</span>);</span><br><span class="line">    var_dump(<span class="variable">$site_info</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/sec-redclub.com$/&#x27;</span>,<span class="variable">$site_info</span>[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">        exec(<span class="string">&#x27;curl &quot;&#x27;</span>.<span class="variable">$site_info</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&quot;&#x27;</span>, <span class="variable">$result</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&lt;h1&gt;You have curl <span class="subst">&#123;$site_info[&#x27;host&#x27;]&#125;</span> successfully!&lt;/h1&gt;&lt;/center&gt;</span></span><br><span class="line"><span class="string">              &lt;center&gt;&lt;textarea rows=&#x27;20&#x27; cols=&#x27;90&#x27;&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> implode(<span class="string">&#x27; &#x27;</span>, <span class="variable">$result</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;&lt;center&gt;&lt;h1&gt;Error: Host not allowed&lt;/h1&gt;&lt;/center&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&lt;h1&gt;Just curl sec-redclub.com!&lt;/h1&gt;&lt;/center&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">          &lt;center&gt;&lt;h3&gt;For example:?url=http://sec-redclub.com&lt;/h3&gt;&lt;/center&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// f1agi3hEre.php</span><br><span class="line">&lt;?php</span><br><span class="line">$flag = &quot;HRCTF&#123;f1lt3r_var_1s_s0_c00l&#125;&quot;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3 id="ctf-代码分析"><a href="#ctf-代码分析" class="headerlink" title="ctf 代码分析"></a>ctf 代码分析</h3><p> 和上面的列子一样filter_var函数使用了FILTER_VALIDATE_URL过滤器，也就是GET里url传参的内容必须为url格式的。<br> 然后还使用了一个parse_url(),先来看看这个函数是干啥的</p>
<p><a href="https://imgtu.com/i/bUMOVs"><img src="https://s4.ax1x.com/2022/03/04/bUMOVs.png" alt="bUMOVs.png"></a></p>
<p> 大致的绕过思路呢就是说我们传入的东西呢要是url格式的，想要让它执行curl呢就得要让传入的url里的host拼接上最后传入的内容还必须包含“sec-redclub.com”。<br> 这里在网上翻阅了一些绕过parse_url()函数的资料。<br> <a href="https://medium.com/secjuice/php-ssrf-techniques-9d422cb28d51">https://medium.com/secjuice/php-ssrf-techniques-9d422cb28d51</a><br> 这个外国友人讲解的很好<br> 我们就是用他的思路把传入的协议改为其他除http以为不存在的字符代替,并且使用一些“;”、“/”、“?”、“:”、“@”、“=”和“&amp;” 这些字符拼接</p>
<p><a href="https://imgtu.com/i/bU1OVH"><img src="https://s4.ax1x.com/2022/03/04/bU1OVH.png" alt="bU1OVH.png"></a><br> 现在是host可控了然后传入我们的命令来达到命令执行。<br>payload：<br> <a href="http://192.168.125.134/index.php?url=asd://&quot;;ls;&quot;;sec-redclub.com:80/">http://192.168.125.134/index.php?url=asd://&quot;;ls;&quot;;sec-redclub.com:80/</a></p>
<p><a href="https://imgtu.com/i/bU8BcV"><img src="https://s4.ax1x.com/2022/03/04/bU8BcV.png" alt="bU8BcV.png"></a><br> 因为过滤的问题想要读取文件不能有空格，所以读取payload为：<br> <a href="http://192.168.125.134/index.php?url=asd://&quot;;cat">http://192.168.125.134/index.php?url=asd://&quot;;cat</a>&lt;f1agi3hEre.php;”;sec-redclub.com:80/</p>
<p><a href="https://imgtu.com/i/bUJ1eS"><img src="https://s4.ax1x.com/2022/03/04/bUJ1eS.png" alt="bUJ1eS.png"></a></p>
<p> 以上payload可能存在url编码问题，要注意一下。</p>
<p> 该ctf题目为红日安全的，感谢红日安全的开源分享。<br> <a href="https://github.com/hongriSec/PHP-Audit-Labs">https://github.com/hongriSec/PHP-Audit-Labs</a></p>
]]></content>
  </entry>
</search>
